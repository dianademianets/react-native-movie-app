{"version":3,"sources":["components/Movie.js","services/axios.js","services/movies.service.js","screens/Movies.js","screens/Home.js","screens/FullMovies.js","screens/Navigation.js","App.js"],"names":["WrapperView","styled","View","ContainerImage","MovieImage","Image","MovieTitle","Text","MovieDetails","Movie","str","item","source","uri","poster_path","original_title","length","substring","axiosService","axios","create","baseURL","headers","Authorization","moviesService","page","get","id","param","InputView","MoviesView","MoviesContainer","ButtonView","MoviesScreen","navigation","React","useState","isLoading","setIsLoading","pageNumber","setPageNumber","movies","setMovies","text","setText","useEffect","then","data","results","catch","err","console","log","finally","style","flex","justifyContent","alignItems","ActivityIndicator","size","marginTop","ScrollView","horizontal","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","width","Ionicons","name","color","TextInput","placeholder","onSubmitEditing","value","nativeEvent","map","TouchableOpacity","onPress","navigate","Button","title","HomeContainer","HomeView","HomeTitle","HomeScreen","moviesPopular","setMoviesPopular","moviesRated","setMoviesRated","Alert","alert","ref","pagingEnabled","contentContainerStyle","decelerationRate","MovieView","ImageView","MovieText","FullMoviesScreen","route","params","setMovie","trailers","setTrailers","padding","vote_average","popularity","budget","overview","release_date","original_language","height","play","videoId","key","Tab","createBottomTabNavigator","HomeStack","createNativeStackNavigator","MoviesStack","HomeStackScreen","Navigator","Screen","component","options","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","MoviesStackScreen","Navigation","NavigationContainer","barStyle","screenOptions","tabBarIcon","iconName","focused","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","App"],"mappings":"wUAEMA,EAAcC,UAAOC,KAAV,kJAQXC,EAAiBF,UAAOC,KAAV,sCAIdE,EAAaH,UAAOI,MAAV,+EAMVC,EAAaL,UAAOM,KAAV,8EAMVC,EAAeP,UAAOC,KAAV,kEAeLO,EAAQ,SAAC,GAAY,IATXC,EASAC,EAAU,EAAVA,KAEnB,OACI,eAACX,EAAD,WACI,cAACG,EAAD,UACI,cAACC,EAAD,CAAYQ,OAAQ,CAACC,IAAI,kCAAmCF,EAAKG,iBAErE,cAACN,EAAD,UACI,cAACF,EAAD,WAjBOI,EAiBoBC,EAAKI,eAhBxCL,EAAIM,QAAU,EACPN,EAAIO,UAAU,EAAG,GAAK,MAG1BP,W,SCnCLQ,E,OAAeC,EAAMC,OAAO,CAC9BC,QAAS,+BACTC,QAAS,CACLC,cAAe,iOCHVC,EACG,SAACC,GAAD,OAAUP,EAAaQ,IAAb,wBAAyCD,IADtDD,EAEA,SAACG,GAAD,OAAQT,EAAaQ,IAAb,UAA2BC,IAFnCH,EAGQ,kBAAMN,EAAaQ,IAAb,4CAHdF,EAIM,kBAAMN,EAAaQ,IAAb,8CAJZF,EAKU,SAACI,EAAOH,GAAR,OAAiBP,EAAaQ,IAAb,uBAAwCE,EAAxC,SAAsDH,IALjFD,EAMC,SAACG,GAAD,OAAQT,EAAaQ,IAAb,UAA2BC,EAA3B,YCKhBE,EAAY5B,UAAOC,KAAV,0LAUT4B,GAAa7B,UAAOC,KAAV,sEAKV6B,GAAkB9B,UAAOC,KAAV,iHAOf8B,GAAa/B,UAAOC,KAAV,6FAOH+B,GAAe,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAC1B,EAAkCC,IAAMC,UAAS,GAAjD,WAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,IAAMC,SAAS,GAAnD,WAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BL,IAAMC,SAAS,IAA3C,WAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBP,IAAMC,SAAS,IAAvC,WAAOO,EAAP,KAAaC,EAAb,KAgBAT,IAAMU,WAda,WACfP,GAAa,GACbd,EAAyBe,GAAYO,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACxCL,EAAUK,EAAKC,YAEdC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEfG,SAAQ,WACLf,GAAa,QAKG,CAACC,IAiB7B,GAFAJ,IAAMU,WAba,WACfP,GAAa,GACbd,EAAgCmB,EAAMJ,GAAYO,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACrDL,EAAUK,EAAKC,SACfG,QAAQC,IAAIL,EAAKC,YAEhBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEfG,SAAQ,WACLf,GAAa,QAGG,CAACK,EAAMJ,IAE/BF,EACA,OACI,eAACnC,EAAA,QAAD,CACIoD,MAAO,CACHC,KAAM,EACNC,eAAgB,SAChBC,WAAY,UAJpB,UAMI,cAACC,EAAA,QAAD,CAAmBC,KAAK,UACxB,cAACpD,EAAA,QAAD,CAAM+C,MAAO,CAACM,UAAW,IAAzB,2BAaZ,OACI,cAACC,EAAA,QAAD,CAAYC,YAAY,EAAOC,8BAA8B,EACjDC,gCAAgC,EAD5C,SAEI,eAAClC,GAAD,WACI,eAACD,EAAD,WACI,cAAC3B,EAAA,QAAD,CAAMoD,MAAO,CAACW,MAAO,OAArB,SACI,cAACC,EAAA,QAAD,CAAUC,KAAM,SAAUR,KAAM,GAAIS,MAAO,WAE/C,cAACC,EAAA,QAAD,CACIC,YAAa,YACbC,gBAAiB,SAACC,GAAD,OAAW5B,EAAQ4B,EAAMC,YAAY9B,OACtDW,MAAO,CAACc,MAAO,OAAQH,MAAO,YAGtC,eAAC/D,EAAA,QAAD,WAEI,cAAC6B,GAAD,UAEQU,EAAOiC,KAAI,SAAC/D,GAAD,OACP,cAACgE,EAAA,QAAD,CACIC,QAAS,kBAAM1C,EAAW2C,SAAS,aAAc,CAAClD,GAAIhB,EAAKgB,MAD/D,SAEI,cAAC,EAAD,CAAqBhB,KAAMA,GAAfA,EAAKgB,WAKjC,eAACK,GAAD,WACI,cAAC8C,EAAA,QAAD,CACIC,MAAM,WACNH,QAAS,WApCXpC,EAAlBD,GAAc,EAAkB,EAAmBA,EAAa,MAwChD,cAACuC,EAAA,QAAD,CACIC,MAAM,OACNH,QAAS,WAtCPpC,EAAtBD,GAAc,MAAsB,MAAuBA,EAAa,kB,SCpF1EyC,GAAgB/E,UAAOC,KAAV,0CAIb+E,GAAWhF,UAAOC,KAAV,oFAKRgF,GAAYjF,UAAOM,KAAV,sIAUF4E,GAAa,SAAC,GAAkB,IAAjBjD,EAAgB,EAAhBA,WAExB,EAAkCC,IAAMC,UAAS,GAAjD,WAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CH,IAAMC,SAAS,IAAzD,WAAOgD,EAAP,KAAsBC,EAAtB,KACA,EAAsClD,IAAMC,SAAS,IAArD,WAAOkD,EAAP,KAAoBC,EAApB,KAiCA,OAJApD,IAAMU,WA3BoB,WACtBP,GAAa,GACbd,IAAgCsB,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACnCsC,EAAiBtC,EAAKC,YAErBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZsC,WAAMC,MAAM,QAAZ,YAEHpC,SAAQ,WACLf,GAAa,QAiBU,IACnCH,IAAMU,WAfkB,WACpBP,GAAa,GACbd,IAA8BsB,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACjCwC,EAAexC,EAAKC,YAEnBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZsC,WAAMC,MAAM,QAAZ,YAEHpC,SAAQ,WACLf,GAAa,QAKQ,IAG7BD,EAEI,eAACnC,EAAA,QAAD,CACIoD,MAAO,CACHC,KAAM,EACNC,eAAgB,SAChBC,WAAY,UAJpB,UAMI,cAACC,EAAA,QAAD,CAAmBC,KAAK,UACxB,cAACpD,EAAA,QAAD,CAAM+C,MAAO,CAACM,UAAW,IAAzB,2BAMR,cAACoB,GAAD,UAGI,eAACC,GAAD,WACI,cAACC,GAAD,oCACA,cAACrB,EAAA,QAAD,CACI6B,IAAK,SAACA,GAAD,OAASA,GACd5B,YAAY,EACZ6B,eAAa,EACb3B,gCAAgC,EAChC4B,sBAAuB,CACnBpC,eAAgB,SAChBC,WAAY,UAEhBoC,iBAAkB,EATtB,SAYQT,EAAcV,KAAI,SAAC/D,GAAD,OACd,cAACgE,EAAA,QAAD,CACIC,QAAS,kBAAM1C,EAAW2C,SAAS,aAAc,CAAClD,GAAIhB,EAAKgB,MAD/D,SAEI,cAAC,EAAD,CAAqBhB,KAAMA,GAAfA,EAAKgB,WAIjC,cAACuD,GAAD,kCACA,cAACrB,EAAA,QAAD,CAAYC,YAAY,EACZE,gCAAgC,EAChC2B,eAAa,EACbC,sBAAuB,CACnBpC,eAAgB,SAChBC,WAAY,UAEhBoC,iBAAkB,EAP9B,SAWQP,EAAYZ,KAAI,SAAC/D,GAAD,OACZ,cAACgE,EAAA,QAAD,CACIC,QAAS,kBAAM1C,EAAW2C,SAAS,aAAc,CAAClD,GAAIhB,EAAKgB,MAD/D,SAEI,cAAC,EAAD,CAAqBhB,KAAMA,GAAfA,EAAKgB,iB,qBCrH3CmE,GAAY7F,UAAOC,KAAV,0CAIT6F,GAAY9F,UAAOC,KAAV,wEAKTE,GAAaH,UAAOI,MAAV,iGAOVC,GAAaL,UAAOM,KAAV,sHASVyF,GAAY/F,UAAOM,KAAV,qGAQF0F,GAAmB,SAAC,GAAa,IAEnCtE,EAFkC,EAAXuE,MAEXC,OAAZxE,GACP,EAAkCQ,IAAMC,UAAS,GAAjD,WAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA2BH,IAAMC,SAAS,IAA1C,WAAOK,EAAP,KAAe2D,EAAf,KACA,EAAgCjE,IAAMC,SAAS,IAA/C,WAAOiE,EAAP,KAAiBC,EAAjB,KA4BA,OA1BAnE,IAAMU,WAAU,WACZP,GAAa,GACbd,EAAsBG,GAAImB,MAAK,YAAa,IAAXC,EAAU,EAAVA,KAC7BqD,EAASrD,MACVE,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZsC,WAAMC,MAAM,QAAZ,YAECpC,SAAQ,WACLf,GAAa,QAEtB,CAACX,IAEJQ,IAAMU,WAAU,WACZP,GAAa,GACbd,EAAuBG,GAAImB,MAAK,YAAa,IAAXC,EAAU,EAAVA,KAC9BuD,EAAYvD,EAAKC,YAClBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZsC,WAAMC,MAAM,QAAZ,YAECpC,SAAQ,WACLf,GAAa,QAEtB,CAACX,IAEAU,EAEI,eAACnC,EAAA,QAAD,CACIoD,MAAO,CACHC,KAAM,EACNC,eAAgB,SAChBC,WAAY,UAJpB,UAMI,cAACC,EAAA,QAAD,CAAmBC,KAAK,UACxB,cAACpD,EAAA,QAAD,CAAM+C,MAAO,CAACM,UAAW,GAAIQ,MAAM,QAAnC,2BAOR,cAACP,EAAA,QAAD,CAAYC,YAAY,EAAOC,8BAA8B,EACjDC,gCAAgC,EAD5C,SAEI,eAAC8B,GAAD,CAAWxC,MAAO,CAACiD,QAAS,IAA5B,UACI,cAAC,GAAD,UAAa9D,EAAO1B,iBACpB,eAACb,EAAA,QAAD,WACI,cAAC6F,GAAD,UACI,cAAC,GAAD,CAAYnF,OAAQ,CAACC,IAAI,kCAAmC4B,EAAO3B,iBAEvE,eAACZ,EAAA,QAAD,WACI,eAAC8F,GAAD,4BAA0BvD,EAAO+D,gBACjC,eAACR,GAAD,yBAAuBvD,EAAOgE,cAC9B,eAACT,GAAD,qBAAmBvD,EAAOiE,UAC1B,eAACV,GAAD,wBAAsBvD,EAAOkE,YAC7B,eAACX,GAAD,4BAA0BvD,EAAOmE,gBACjC,eAACZ,GAAD,iCAA+BvD,EAAOoE,2BAG9C,cAAC3G,EAAA,QAAD,UACKmG,EAASrF,OAAS,cAAC,KAAD,CAAe8F,OAAQ,IAAKC,MAAM,EAAMC,QAASX,EAAS,GAAGY,MAAQ,aClGtGC,GAAMC,oBACNC,GAAYC,oBACZC,GAAcD,oBAEpB,SAASE,KACL,OACI,eAACH,GAAUI,UAAX,WACI,cAACJ,GAAUK,OAAX,CAAkBtD,KAAK,OAAOuD,UAAWvC,GAAYwC,QAAS,CAC1D5C,MAAO,OAAQ6C,YAAa,CACxBC,gBAAiB,WAClBC,gBAAiB,OACpBC,iBAAkB,CACdC,WAAY,WAKpB,cAACZ,GAAUK,OAAX,CAAkBtD,KAAK,aAAauD,UAAWzB,GAAkB0B,QAAS,CACtE5C,MAAO,UAAW6C,YAAa,CAC3BC,gBAAiB,WAClBC,gBAAiB,OACpBC,iBAAkB,CACdC,WAAY,cAOhC,SAASC,KACL,OACI,eAACX,GAAYE,UAAb,WACI,cAACF,GAAYG,OAAb,CAAoBtD,KAAK,SAASuD,UAAWzF,GAAc0F,QAAS,CAChE5C,MAAO,SAAU6C,YAAa,CAC1BC,gBAAiB,WAClBC,gBAAiB,OACpBC,iBAAkB,CACdC,WAAY,WAGpB,cAACV,GAAYG,OAAb,CAAoBtD,KAAK,aAAauD,UAAWzB,GAC7B0B,QAAS,CACL5C,MAAO,UAAW6C,YAAa,CAC3BC,gBAAiB,WAClBC,gBAAiB,OACpBC,iBAAkB,CACdC,WAAY,cAO7C,IAAME,GAAa,WACtB,OACI,cAACC,EAAA,QAAD,UACI,eAACjB,GAAIM,UAAL,CAAgBY,SAAU,CAACP,gBAAiB,WAAaQ,cAAe,gBAAEnC,EAAF,EAAEA,MAAF,MAAc,CAClFoC,WAAY,YAA6B,IACjCC,EADMC,EAA0B,EAA1BA,QAASpE,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,KAW1B,MARmB,SAAfuC,EAAM/B,KACNoE,EAAWC,EACL,OACA,eACgB,WAAftC,EAAM/B,OACboE,EAAWC,EAAU,OAAS,gBAG3B,cAACtE,EAAA,QAAD,CAAUC,KAAMoE,EAAU5E,KAAMA,EAAMS,MAAOA,KAExDqE,sBAAuB,MACvBC,wBAAyB,SAf7B,UAkBI,cAACxB,GAAIO,OAAL,CAAYtD,KAAK,OAAOuD,UAAWH,GAAiBI,QAAS,CACzDgB,aAAa,KAEjB,cAACzB,GAAIO,OAAL,CAAYtD,KAAK,SAASuD,UAAWO,GAAmBN,QAAS,CAC7DgB,aAAa,WCpFlB,SAASC,KACpB,OACI,cAAC,GAAD,M","file":"static/js/app.78c4d41d.chunk.js","sourcesContent":["import styled from 'styled-components/native';\n\nconst WrapperView = styled.View`\n  margin-bottom: 15px;\n  background: #040C18;\n  border-radius: 20px;\n  justify-content: center;\n  align-items: center;\n\n`;\nconst ContainerImage = styled.View`\n  padding: 10px;\n`;\n\nconst MovieImage = styled.Image`\n  width: 100px;\n  height: 130px;\n  border-radius: 12px;\n`;\n\nconst MovieTitle = styled.Text`\n  font-size: 12px;\n  color: snow;\n  font-weight: bold;\n`;\n\nconst MovieDetails = styled.View`\n  display: flex;\n  justify-content: center;\n`;\n\n\nconst truncateTitle = (str) => {\n    if (str.length >= 8) {\n        return str.substring(0, 8) + '...';\n    }\n\n    return str;\n};\n\n\nexport const Movie = ({item}) => {\n\n    return (\n        <WrapperView>\n            <ContainerImage>\n                <MovieImage source={{uri: `https://image.tmdb.org/t/p/w300${item.poster_path}`}}/>\n            </ContainerImage>\n            <MovieDetails>\n                <MovieTitle>{truncateTitle(item.original_title)}</MovieTitle>\n            </MovieDetails>\n        </WrapperView>\n    );\n};\n","import axios from 'axios'\n\nconst axiosService = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    headers: {\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTRhMTA4NDYwN2IxNjRlMDM4ZmM5NGY0NTIyZDcxNyIsInN1YiI6IjVmZmVhNzMwMGZmMTVhMDAzZDVhOGRhYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.W8uRmvLzDEPlGfMzO8habaeVmLeEk2dUYVKuTbw-wBg '\n    }\n})\n\nexport {axiosService}\n","import {axiosService} from './axios';\n\nexport const moviesService = {\n    getAllPage: (page) => axiosService.get(`/discover/movie?page=${page}`),\n    getById: (id) => axiosService.get(`/movie/${id}`),\n    getPopularMovie: () => axiosService.get(`/discover/movie?sort_by=popularity.desc`),\n    getRatedMovie: () => axiosService.get(`/discover/movie?sort_by=vote_average.desc`),\n    getSearchResponse: (param, page) => axiosService.get(`/search/movie?query=${param}&page=${page}`),\n    getVideo: (id) => axiosService.get(`/movie/${id}/videos`),\n}\n","import React from 'react';\nimport {\n    Text,\n    View,\n    ActivityIndicator,\n    TouchableOpacity, Button, ScrollView, TextInput,\n} from 'react-native';\nimport styled from 'styled-components/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport {Movie} from '../components/Movie';\nimport {moviesService} from '../services/movies.service';\n\nconst InputView = styled.View`\n  border: 1px solid white;\n  border-radius: 10px;\n  background: #040C18;\n  margin: 10px 20px;\n  padding: 10px 20px;\n  flex-direction: row;\n  column-gap: 10px;\n`;\n\nconst MoviesView = styled.View`\n  background: black;\n  padding: 10px 20px 30px;\n`;\n\nconst MoviesContainer = styled.View`\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  column-gap: 20px;\n`;\n\nconst ButtonView = styled.View`\n  flex-direction: row;\n  justify-content: center;\n  column-gap: 20px;\n`;\n\n\nexport const MoviesScreen = ({navigation}) => {\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [pageNumber, setPageNumber] = React.useState(1);\n    const [movies, setMovies] = React.useState([]);\n    const [text, setText] = React.useState('');\n\n    const fetchPosts = () => {\n        setIsLoading(true);\n        moviesService.getAllPage(pageNumber).then(({data}) => {\n            setMovies(data.results);\n        })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    };\n\n\n    React.useEffect(fetchPosts, [pageNumber]);\n\n    const fetchMovie = () => {\n        setIsLoading(true);\n        moviesService.getSearchResponse(text, pageNumber).then(({data}) => {\n            setMovies(data.results);\n            console.log(data.results)\n        })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    };\n    React.useEffect(fetchMovie, [text, pageNumber]);\n\n    if (isLoading) {\n        return (\n            <View\n                style={{\n                    flex: 1,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}>\n                <ActivityIndicator size='large'/>\n                <Text style={{marginTop: 15}}>Loading...</Text>\n            </View>\n        );\n    }\n\n    const handlePrevious = () => {\n        pageNumber <= 1 ? setPageNumber(1) : setPageNumber(pageNumber - 1);\n    };\n\n    const handleNext = () => {\n        pageNumber >= 32241 ? setPageNumber(32241) : setPageNumber(pageNumber + 1);\n    };\n\n    return (\n        <ScrollView horizontal={false} showsVerticalScrollIndicator={false}\n                    showsHorizontalScrollIndicator={false}>\n            <MoviesView>\n                <InputView>\n                    <View style={{width: '10%'}}>\n                        <Ionicons name={'search'} size={20} color={'snow'}/>\n                    </View>\n                    <TextInput\n                        placeholder={'Search...'}\n                        onSubmitEditing={(value) => setText(value.nativeEvent.text)}\n                        style={{color: 'snow', width: '88%'}}/>\n                </InputView>\n\n                <View>\n\n                    <MoviesContainer>\n                        {\n                            movies.map((item) => (\n                                <TouchableOpacity\n                                    onPress={() => navigation.navigate('FullMovies', {id: item.id})}>\n                                    <Movie key={item.id} item={item}/>\n                                </TouchableOpacity>\n                            ))}\n                    </MoviesContainer>\n\n                    <ButtonView>\n                        <Button\n                            title='previous'\n                            onPress={() =>\n                                handlePrevious(pageNumber)\n                            }\n                        />\n                        <Button\n                            title='next'\n                            onPress={() =>\n                                handleNext(pageNumber)\n                            }\n                        />\n                    </ButtonView>\n                </View>\n            </MoviesView>\n        </ScrollView>\n\n    );\n};\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Alert,\n    ScrollView,\n    Text,\n    TouchableOpacity,\n    View\n} from 'react-native';\nimport styled from 'styled-components/native';\n\nimport {moviesService} from '../services/movies.service';\nimport {Movie} from '../components/Movie';\n\nconst HomeContainer = styled.View`\n  background: black;\n`;\n\nconst HomeView = styled.View`\n  margin: 20px 0 30px 10px;\n  justify-content: space-between;\n`;\n\nconst HomeTitle = styled.Text`\n  margin:10px;\n  text-align: center;\n  color: snow;\n  padding: 5px;\n  font-weight: bold;\n  font-size: 20px;\n`;\n\n\nexport const HomeScreen = ({navigation}) => {\n\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [moviesPopular, setMoviesPopular] = React.useState([]);\n    const [moviesRated, setMoviesRated] = React.useState([]);\n\n    const fetchPopularMovie = () => {\n        setIsLoading(true);\n        moviesService.getPopularMovie().then(({data}) => {\n            setMoviesPopular(data.results);\n        })\n            .catch((err) => {\n                console.log(err);\n                Alert.alert('Error', `error`);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    };\n    const fetchRatedMovie = () => {\n        setIsLoading(true);\n        moviesService.getRatedMovie().then(({data}) => {\n            setMoviesRated(data.results);\n        })\n            .catch((err) => {\n                console.log(err);\n                Alert.alert('Error', `error`);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n\n    };\n    React.useEffect(fetchPopularMovie, []);\n    React.useEffect(fetchRatedMovie, []);\n\n\n    if (isLoading) {\n        return (\n            <View\n                style={{\n                    flex: 1,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}>\n                <ActivityIndicator size='large'/>\n                <Text style={{marginTop: 15}}>Loading...</Text>\n            </View>\n        );\n    }\n\n    return (\n        <HomeContainer>\n\n\n            <HomeView>\n                <HomeTitle>What's Popular Movies</HomeTitle>\n                <ScrollView\n                    ref={(ref) => ref}\n                    horizontal={true}\n                    pagingEnabled\n                    showsHorizontalScrollIndicator={false}\n                    contentContainerStyle={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                    }}\n                    decelerationRate={0}\n                >\n                    {\n                        moviesPopular.map((item) => (\n                            <TouchableOpacity\n                                onPress={() => navigation.navigate('FullMovies', {id: item.id})}>\n                                <Movie key={item.id} item={item}/>\n                            </TouchableOpacity>\n                        ))}\n                </ScrollView>\n                <HomeTitle>What's Rated Movies</HomeTitle>\n                <ScrollView horizontal={true}\n                            showsHorizontalScrollIndicator={false}\n                            pagingEnabled\n                            contentContainerStyle={{\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                            }}\n                            decelerationRate={0}\n                >\n\n                    {\n                        moviesRated.map((item) => (\n                            <TouchableOpacity\n                                onPress={() => navigation.navigate('FullMovies', {id: item.id})}>\n                                <Movie key={item.id} item={item}/>\n                            </TouchableOpacity>\n                        ))}\n                </ScrollView>\n\n            </HomeView>\n        </HomeContainer>\n    );\n};\n\n","import React from 'react';\nimport {ActivityIndicator, Alert, ScrollView, Text, View} from 'react-native';\nimport styled from 'styled-components/native';\nimport YoutubePlayer from 'react-native-youtube-iframe';\n\nimport {moviesService} from '../services/movies.service';\n\nconst MovieView = styled.View`\n  background: black;\n`;\n\nconst ImageView = styled.View`\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MovieImage = styled.Image`\n  margin: 2% 5%;\n  width: 200px;\n  height: 300px;\n  border-radius: 12px;\n`;\n\nconst MovieTitle = styled.Text`\n  text-align: center;\n  color: snow;\n  padding: 5px;\n  font-weight: bold;\n  font-size: 20px;\n`;\n\n\nconst MovieText = styled.Text`\n  color: snow;\n  padding: 10px 20px;\n  font-weight: bold;\n  font-size: 15px;\n`;\n\n\nexport const FullMoviesScreen = ({route}) => {\n\n    const {id} = route.params;\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [movies, setMovie] = React.useState([]);\n    const [trailers, setTrailers] = React.useState([]);\n\n    React.useEffect(() => {\n        setIsLoading(true);\n        moviesService.getById(id).then(({data}) => {\n            setMovie(data);\n        }).catch((err) => {\n            console.log(err);\n            Alert.alert('Error', `error`);\n        })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [id]);\n\n    React.useEffect(() => {\n        setIsLoading(true);\n        moviesService.getVideo(id).then(({data}) => {\n            setTrailers(data.results);\n        }).catch((err) => {\n            console.log(err);\n            Alert.alert('Error', `error`);\n        })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [id]);\n\n    if (isLoading) {\n        return (\n            <View\n                style={{\n                    flex: 1,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}>\n                <ActivityIndicator size='large'/>\n                <Text style={{marginTop: 15, color:\"snow\"}}>Loading...</Text>\n            </View>\n        );\n    }\n\n\n    return (\n        <ScrollView horizontal={false} showsVerticalScrollIndicator={false}\n                    showsHorizontalScrollIndicator={false}>\n            <MovieView style={{padding: 20}}>\n                <MovieTitle>{movies.original_title}</MovieTitle>\n                <View>\n                    <ImageView>\n                        <MovieImage source={{uri: `https://image.tmdb.org/t/p/w200${movies.poster_path}`}}/>\n                    </ImageView>\n                    <View>\n                        <MovieText>Movie rating: {movies.vote_average}</MovieText>\n                        <MovieText>Popularity:{movies.popularity}</MovieText>\n                        <MovieText>Budget:{movies.budget}</MovieText>\n                        <MovieText>Overview: {movies.overview}</MovieText>\n                        <MovieText>Release date: {movies.release_date}</MovieText>\n                        <MovieText>Original language: {movies.original_language}</MovieText>\n                    </View>\n                </View>\n                <View>\n                    {trailers.length ? <YoutubePlayer height={300} play={true} videoId={trailers[0].key}/>: null}\n                </View>\n            </MovieView>\n        </ScrollView>\n    );\n};\n","import {NavigationContainer} from '@react-navigation/native';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack'\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport {MoviesScreen} from './Movies';\nimport {HomeScreen} from './Home';\nimport {FullMoviesScreen} from './FullMovies';\n\nconst Tab = createBottomTabNavigator();\nconst HomeStack = createNativeStackNavigator();\nconst MoviesStack = createNativeStackNavigator();\n\nfunction HomeStackScreen() {\n    return (\n        <HomeStack.Navigator>\n            <HomeStack.Screen name='Home' component={HomeScreen} options={{\n                title: 'Home', headerStyle: {\n                    backgroundColor: '#040C18',\n                }, headerTintColor: '#fff',\n                headerTitleStyle: {\n                    fontWeight: 'bold',\n                },\n            }}/>\n\n\n            <HomeStack.Screen name='FullMovies' component={FullMoviesScreen} options={{\n                title: 'Details', headerStyle: {\n                    backgroundColor: '#040C18',\n                }, headerTintColor: '#fff',\n                headerTitleStyle: {\n                    fontWeight: 'bold',\n                },\n            }}/>\n        </HomeStack.Navigator>\n    );\n}\n\nfunction MoviesStackScreen() {\n    return (\n        <MoviesStack.Navigator>\n            <MoviesStack.Screen name='Movies' component={MoviesScreen} options={{\n                title: 'Movies', headerStyle: {\n                    backgroundColor: '#040C18',\n                }, headerTintColor: '#fff',\n                headerTitleStyle: {\n                    fontWeight: 'bold',\n                },\n            }}/>\n            <MoviesStack.Screen name='FullMovies' component={FullMoviesScreen}\n                                options={{\n                                    title: 'Details', headerStyle: {\n                                        backgroundColor: '#040C18',\n                                    }, headerTintColor: '#fff',\n                                    headerTitleStyle: {\n                                        fontWeight: 'bold',\n                                    },\n                                }}/>\n        </MoviesStack.Navigator>\n    );\n}\n\nexport const Navigation = () => {\n    return (\n        <NavigationContainer>\n            <Tab.Navigator  barStyle={{backgroundColor: '#040C18'}}  screenOptions={({route}) => ({\n                tabBarIcon: ({focused, color, size}) => {\n                    let iconName;\n\n                    if (route.name === 'Home') {\n                        iconName = focused\n                            ? 'home'\n                            : 'home-outline';\n                    } else if (route.name === 'Movies') {\n                        iconName = focused ? 'film' : 'film-outline';\n                    }\n\n                    return <Ionicons name={iconName} size={size} color={color}/>;\n                },\n                tabBarActiveTintColor: 'red',\n                tabBarInactiveTintColor: 'blue',\n            })}\n            >\n                <Tab.Screen name='Home' component={HomeStackScreen} options={{\n                    headerShown: false\n                }}/>\n                <Tab.Screen name='Movies' component={MoviesStackScreen} options={{\n                    headerShown: false\n                }}/>\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n","import React from 'react';\nimport {Navigation} from './screens/Navigation';\n\nexport default function App() {\n    return (\n        <Navigation/>\n    )\n\n}\n"],"sourceRoot":""}